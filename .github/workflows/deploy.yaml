name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [ feature/#52-create-a-deploy-workflow ]
    tags: ['v.*.*.*', 'V.*.*.*']

jobs:
    tests:
        uses: ./.github/workflows/build_and_test.yaml
        
    deploy: 
        needs: ["tests"]
        runs-on: ubuntu-latest

        
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            
            - name: Login to docker hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_PASSWORD }}

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Build and push minitwit-joel-api image
              uses: docker/build-push-action@v2
              with:
                context: ./src/minitwit.Api/
                file: ./src/minitwit.Api/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_HUB_USERNAME }}/minitwit-joel-api:latest
                cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/minitwit-joel-api:apibuildcache
                cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/minitwit-joel-api:apibuildcache,mode=max

            - name: Debug build context
              run: ls -R

            - name: Build and push minitwit-joel-web image
              uses: docker/build-push-action@v2
              with:
                context: ./src/minitiwt.Web
                file: ./src/minitwit.Web/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_HUB_USERNAME }}/minitwit-joel-web:latest
                cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/minitwit-joel-web:webbuildcache
                cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/minitwit-joel-web:webbuildcache,mode=max

            - name: Test minitwit
              run: |
                docker build -t $DOCKER_HUB_USERNAME/minitwittestimage -f Dockerfile-minitwit-tests .
                yes 2>/dev/null | docker-compose up -d
                docker run --rm --network=itu-minitwit-network $DOCKER_HUB_USERNAME/minitwittestimage
              env:
                DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        
            # - name: Configure SSH
            #   run: |
            #     mkdir -p ~/.ssh/
            #     echo "$SSH_KEY" > ~/.ssh/minitwit.key
            #     chmod 600 ~/.ssh/minitwit.key
            #   env:
            #     SSH_KEY: ${{ secrets.SSH_KEY }}
        
            # - name: Deploy to server
            #     # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
            #   run: >
            #     ssh $SSH_USER@$SSH_HOST
            #     -i ~/.ssh/minitwit.key -o StrictHostKeyChecking=no
            #     '/minitwit/deploy.sh'
            #   env:
            #     SSH_USER: ${{ secrets.SSH_USER }}
            #     SSH_HOST: ${{ secrets.SSH_HOST }}
