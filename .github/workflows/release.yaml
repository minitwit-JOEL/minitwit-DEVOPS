name: Release

on:
  workflow_dispatch:
  push:
    tags: ['v.*.*.*', 'V.*.*.*']

jobs:
  tests:
    uses: ./.github/workflows/build_and_test.yaml
    secrets:
      Token__Key: ${{ secrets.TOKEN__KEY }}
      Token__Issuer: ${{ secrets.TOKEN__ISSUER }}
      Token__Audience: ${{ secrets.TOKEN__AUDIENCE }}
      ConnectionStrings__DefaultConnection: ${{ secrets.CONNECTIONSTRINGS__DEFAULTCONNECTION }}
      SimApiAccess__Key: ${{ secrets.SIM_API_KEY }}

  release:
    needs: ["tests"]
    runs-on: ubuntu-latest
    env:
      DOTNET_ROOT: /home/runner/.dotnet
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.*

      - name: Build and package .NET API
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          cd "src/minitwit.Api"
          for runtime in linux-x64 osx-x64 win-x64
          do
            release_os="minitwit-${tag}-${runtime}"
            dotnet publish minitwit.Api.csproj \
              --framework net8.0 \
              --runtime "$runtime" \
              -c Release \
              -o "$release_os" \
              /p:PublishTrimmed=true \
              /p:PublishSingleFile=true

            7z a -tzip "${{ github.workspace }}/minitwit.Api/${release_os}.zip" "./${release_os}/*"
            rm -r "${release_os}"
          done

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies for web
        working-directory: src/minitwit.Web
        run:
          npm ci
          
      - name: Build web
        working-directory: src/minitwit.Web
        run:
          npm run build --if-present

      - name: Debug Web Build Output
        working-directory: src/minitwit.Web
        run: |
          echo "Listing current directory contents:"
          ls -al
          echo "Listing build output folder (if exists):"
          ls -al build || echo "Folder 'build' not found."

      - name: Package web build
        working-directory: src/minitwit.Web
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          7z a -tzip "${{ github.workspace }}/minitwit.Web/minitwit-web-${tag}.zip" "build/*"

      - name: Set Tag
        run: echo "TAG=$(git describe --tags --abbrev=0 || echo 'v0.0.0')" >> $GITHUB_ENV

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          files: |
            ${{ github.workspace }}/minitwit.Api/minitwit-*.zip
            ${{ github.workspace }}/minitwit.Web/minitwit-web-*.zip
      
