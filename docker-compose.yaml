version: '3.9'
services:
  db:
    image: postgres:latest
    container_name: minitwit-db
    networks:
      - monitoring
    env_file:
      - .secrets
    healthcheck:
      #This command checks if the database is ready, right on the source db server
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  minitwit-api:
    build:
      context: .
      dockerfile: ./src/minitwit.Api/Dockerfile
    container_name: minitwit-api
    networks:
      - monitoring
    depends_on:
      - db
    env_file:
      - .secrets
    ports:
      - "8080:8080"
      - "8081:8081"

  web:
    build:
      context: ./src/minitwit.Web
      dockerfile: Dockerfile
    container_name: minitwit-web
    networks:
      - monitoring
    depends_on:
      - minitwit-api
    environment:
      - API_BASE_URL=http://minitwit-api:8080/
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    depends_on:
      - minitwit-api  
  grafana:
      image: grafana/grafana:10.2.4
      container_name: grafana
      ports:
        - "3001:3000"
      networks:
        - monitoring
      volumes:
      - grafana-data:/var/lib/grafana
      # dashboards
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      # datasources
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      depends_on:
        - minitwit-api


networks:
  monitoring:
    external: false 
    name: monitoring
    driver: bridge

volumes:
  db-data:
  prometheus-data:
  grafana-data: